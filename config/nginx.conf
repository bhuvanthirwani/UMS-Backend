worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
    # 'use epoll;' to enable for Linux 2.6+
    # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    # fallback in case we can't determine a type
    include mime.types;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;

    # Gzip settings
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response

        # for UNIX domain socket setups
        server unix:/tmp/gunicorn.sock fail_timeout=0;

        # for a TCP configuration
        # server 192.168.0.7:8000 fail_timeout=0;
    }

    ; server {
    ;     # if no Host match, close the connection to prevent host spoofing
    ;     listen 80 default_server;
    ;     return 444;
    ; }

    server {
        listen 81;
        client_max_body_size 0.5G;

        # set the correct host(s) for your site
        server_name _;

        keepalive_timeout 5;

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        location /healthcheck {
            return 200 'alive';
            add_header Content-Type text/plain;
        }

        # Additional server configurations if needed
        # SSL configuration (uncomment and configure if using HTTPS)
        # listen 443 ssl;
        # ssl_certificate /etc/nginx/ssl/your_domain.crt;
        # ssl_certificate_key /etc/nginx/ssl/your_domain.key;
        # include /etc/nginx/snippets/ssl-params.conf;

        location @proxy_to_app {
            proxy_pass http://localhost:8081/; Gunicorn PORT.

            proxy_redirect off;
            proxy_buffering off;

            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_set_header   Host                 $host;
            proxy_set_header   X-Real-IP            $remote_addr;
            proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto    $scheme;
        }
    }
}